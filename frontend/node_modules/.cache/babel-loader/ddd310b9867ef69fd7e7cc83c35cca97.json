{"ast":null,"code":"import { POST_ATTENDANCE_REQUEST, POST_ATTENDANCE_SUCCESS, POST_ATTENDANCE_FAIL, GET_ATTENDANCE_REQUEST, GET_ATTENDANCE_SUCCESS, GET_ATTENDANCE_FAIL } from '../constants/attendance_constants';\nimport axios from 'axios';\nexport const postAttendance = (attenandance, id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: POST_ATTENDANCE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': `JWT ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/attendance/post/${id}/`, attenandance, config);\n    dispatch({\n      type: POST_ATTENDANCE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: POST_ATTENDANCE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getAttendance = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GET_ATTENDANCE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        'Authorization': `JWT ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/attendance/get/`, config);\n    dispatch({\n      type: GET_ATTENDANCE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ATTENDANCE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["POST_ATTENDANCE_REQUEST","POST_ATTENDANCE_SUCCESS","POST_ATTENDANCE_FAIL","GET_ATTENDANCE_REQUEST","GET_ATTENDANCE_SUCCESS","GET_ATTENDANCE_FAIL","axios","postAttendance","attenandance","id","dispatch","getState","type","userLogin","userInfo","config","headers","token","data","post","payload","error","response","detail","message","getAttendance","get"],"sources":["F:/mess-manager/mess_manager/frontend/src/actions/attendance_actions.js"],"sourcesContent":["import {\r\n    POST_ATTENDANCE_REQUEST,\r\n    POST_ATTENDANCE_SUCCESS,\r\n    POST_ATTENDANCE_FAIL,\r\n\r\n    GET_ATTENDANCE_REQUEST,\r\n    GET_ATTENDANCE_SUCCESS,\r\n    GET_ATTENDANCE_FAIL,\r\n\r\n} from '../constants/attendance_constants'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const postAttendance = (attenandance, id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: POST_ATTENDANCE_REQUEST })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/attendance/post/${id}/`,\r\n            attenandance,\r\n            config)\r\n        dispatch({ type: POST_ATTENDANCE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POST_ATTENDANCE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getAttendance = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_ATTENDANCE_REQUEST\r\n\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/attendance/get/`,\r\n            config)\r\n        dispatch({\r\n            type: GET_ATTENDANCE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ATTENDANCE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}"],"mappings":"AAAA,SACIA,uBADJ,EAEIC,uBAFJ,EAGIC,oBAHJ,EAKIC,sBALJ,EAMIC,sBANJ,EAOIC,mBAPJ,QASO,mCATP;AAUA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,cAAc,GAAG,CAACC,YAAD,EAAeC,EAAf,KAAsB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAC9E,IAAI;IACAD,QAAQ,CAAC;MAAEE,IAAI,EAAEZ;IAAR,CAAD,CAAR;IAEA,MAAM;MACFa,SAAS,EAAE;QAAEC;MAAF;IADT,IAEFH,QAAQ,EAFZ;IAGA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,iBAAkB,OAAMF,QAAQ,CAACG,KAAM;MAFlC;IADE,CAAf;IAOA,MAAM;MAAEC;IAAF,IAAW,MAAMZ,KAAK,CAACa,IAAN,CAAY,wBAAuBV,EAAG,GAAtC,EACnBD,YADmB,EAEnBO,MAFmB,CAAvB;IAGAL,QAAQ,CAAC;MAAEE,IAAI,EAAEX,uBAAR;MAAiCmB,OAAO,EAAEF;IAA1C,CAAD,CAAR;EACH,CAjBD,CAiBE,OAAOG,KAAP,EAAc;IACZX,QAAQ,CAAC;MACLE,IAAI,EAAEV,oBADD;MAELkB,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADjB,GAEHF,KAAK,CAACG;IAJP,CAAD,CAAR;EAMH;AACJ,CA1BM;AA4BP,OAAO,MAAMC,aAAa,GAAG,MAAM,OAAOf,QAAP,EAAiBC,QAAjB,KAA8B;EAC7D,IAAI;IACAD,QAAQ,CAAC;MACLE,IAAI,EAAET;IADD,CAAD,CAAR;IAKA,MAAM;MACFU,SAAS,EAAE;QAAEC;MAAF;IADT,IAEFH,QAAQ,EAFZ;IAIA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB,kBADX;QAEL,iBAAkB,OAAMF,QAAQ,CAACG,KAAM;MAFlC;IADE,CAAf;IAOA,MAAM;MAAEC;IAAF,IAAW,MAAMZ,KAAK,CAACoB,GAAN,CAAW,sBAAX,EACnBX,MADmB,CAAvB;IAEAL,QAAQ,CAAC;MACLE,IAAI,EAAER,sBADD;MAELgB,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAIH,CAvBD,CAuBE,OAAOG,KAAP,EAAc;IACZX,QAAQ,CAAC;MACLE,IAAI,EAAEP,mBADD;MAELe,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,MADjB,GAEHF,KAAK,CAACG;IAJP,CAAD,CAAR;EAMH;AACJ,CAhCM"},"metadata":{},"sourceType":"module"}