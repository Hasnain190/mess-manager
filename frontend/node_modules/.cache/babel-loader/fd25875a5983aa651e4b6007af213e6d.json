{"ast":null,"code":"import { GET_MESS_MENU_REQUEST, GET_MESS_MENU_SUCCESS, GET_MESS_MENU_FAIL, UPDATE_MESS_MENU_REQUEST, UPDATE_MESS_MENU_SUCCESS, UPDATE_MESS_MENU_FAIL, UPDATE_MESS_MENU_RESET } from '../constants/mess_constants';\nimport axios from 'axios';\nexport const getMessMenu = () => async dispatch => {\n  try {\n    dispatch({\n      type: GET_MESS_MENU_REQUEST\n    }); // const {\n    //     userLogin: { userInfo },\n    // } = getState()\n\n    const config = {\n      headers: {\n        'Content-type': 'application/json' // 'Authorization': `JWT ${userInfo.token}`\n\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/mess/`, config);\n    dispatch({\n      type: GET_MESS_MENU_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('messMenu', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: GET_MESS_MENU_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateMessMenu = (day, messMenu) => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_MESS_MENU_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json' // 'Authorization': `JWT ${userInfo.token}`\n\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/mess/update/${day}/`, messMenu, config);\n    dispatch({\n      type: UPDATE_MESS_MENU_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_MESS_MENU_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"names":["GET_MESS_MENU_REQUEST","GET_MESS_MENU_SUCCESS","GET_MESS_MENU_FAIL","UPDATE_MESS_MENU_REQUEST","UPDATE_MESS_MENU_SUCCESS","UPDATE_MESS_MENU_FAIL","UPDATE_MESS_MENU_RESET","axios","getMessMenu","dispatch","type","config","headers","data","get","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","updateMessMenu","day","messMenu","put"],"sources":["F:/mess-manager/mess_manager/frontend/src/actions/mess_actions.js"],"sourcesContent":["import {\r\n    GET_MESS_MENU_REQUEST,\r\n    GET_MESS_MENU_SUCCESS,\r\n    GET_MESS_MENU_FAIL,\r\n\r\n    UPDATE_MESS_MENU_REQUEST,\r\n    UPDATE_MESS_MENU_SUCCESS,\r\n    UPDATE_MESS_MENU_FAIL,\r\n    UPDATE_MESS_MENU_RESET,\r\n\r\n\r\n} from '../constants/mess_constants'\r\n\r\n\r\nimport axios from 'axios'\r\n\r\nexport const getMessMenu = () => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: GET_MESS_MENU_REQUEST\r\n        })\r\n\r\n        // const {\r\n        //     userLogin: { userInfo },\r\n        // } = getState()\r\n\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // 'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/mess/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: GET_MESS_MENU_SUCCESS,\r\n            payload: data\r\n        })\r\n        localStorage.setItem('messMenu', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_MESS_MENU_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const updateMessMenu = (day, messMenu) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: UPDATE_MESS_MENU_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                // 'Authorization': `JWT ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/mess/update/${day}/`,\r\n            messMenu,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: UPDATE_MESS_MENU_SUCCESS,\r\n            payload: data\r\n        })\r\n    }\r\n\r\n\r\n    catch (error) {\r\n        dispatch({\r\n            type: UPDATE_MESS_MENU_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n"],"mappings":"AAAA,SACIA,qBADJ,EAEIC,qBAFJ,EAGIC,kBAHJ,EAKIC,wBALJ,EAMIC,wBANJ,EAOIC,qBAPJ,EAQIC,sBARJ,QAWO,6BAXP;AAcA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;EACjD,IAAI;IACAA,QAAQ,CAAC;MACLC,IAAI,EAAEV;IADD,CAAD,CAAR,CADA,CAKA;IACA;IACA;;IAIA,MAAMW,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB,kBADX,CAEL;;MAFK;IADE,CAAf;IAOA,MAAM;MAAEC;IAAF,IAAW,MAAMN,KAAK,CAACO,GAAN,CAAW,YAAX,EACnBH,MADmB,CAAvB;IAIAF,QAAQ,CAAC;MACLC,IAAI,EAAET,qBADD;MAELc,OAAO,EAAEF;IAFJ,CAAD,CAAR;IAIAG,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAjC;EAEH,CA5BD,CA4BE,OAAOO,KAAP,EAAc;IACZX,QAAQ,CAAC;MACLC,IAAI,EAAER,kBADD;MAELa,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MADjB,GAEHF,KAAK,CAACG;IAJP,CAAD,CAAR;EAMH;AAEJ,CAtCM;AAwCP,OAAO,MAAMC,cAAc,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB,MAAOjB,QAAP,IAAoB;EACjE,IAAI;IACAA,QAAQ,CAAC;MACLC,IAAI,EAAEP;IADD,CAAD,CAAR;IAIA,MAAMQ,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB,kBADX,CAEL;;MAFK;IADE,CAAf;IAOA,MAAM;MAAEC;IAAF,IAAW,MAAMN,KAAK,CAACoB,GAAN,CAAW,oBAAmBF,GAAI,GAAlC,EACnBC,QADmB,EAEnBf,MAFmB,CAAvB;IAKAF,QAAQ,CAAC;MACLC,IAAI,EAAEN,wBADD;MAELW,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAIH,CArBD,CAwBA,OAAOO,KAAP,EAAc;IACVX,QAAQ,CAAC;MACLC,IAAI,EAAEL,qBADD;MAELU,OAAO,EAAEK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MAAtC,GACHF,KAAK,CAACC,QAAN,CAAeR,IAAf,CAAoBS,MADjB,GAEHF,KAAK,CAACG;IAJP,CAAD,CAAR;EAMH;AAEJ,CAlCM"},"metadata":{},"sourceType":"module"}