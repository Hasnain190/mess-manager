{"ast":null,"code":"// store redux\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from \"./reducers/user_reducers\";\nimport { messMenuReducer } from \"./reducers/mess_reducers\";\nimport { postAttendanceReducers, getAttendanceReducers } from \"./reducers/attendance_reducers\";\nimport { addExpensesReducer } from \"./reducers/expenses_reducers\";\nconst reducer = combineReducers({\n  // user reducers\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  // userPasswordReset:userPasswordResetReducer,\n  // userPasswordResetConfirm:userPasswordResetConfirmReducer,\n  // mess reducers\n  messMenu: messMenuReducer,\n  // attendance reducers\n  attendance: postAttendanceReducers,\n  getAttendance: getAttendanceReducers,\n  addExpenses: addExpensesReducer\n});\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null;\nconst messMenuFromStorage = localStorage.getItem(\"messMenu\") ? JSON.parse(localStorage.getItem(\"messMenu\")) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n  messMenu: {\n    messMenu: messMenuFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","messMenuReducer","postAttendanceReducers","getAttendanceReducers","addExpensesReducer","reducer","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","messMenu","attendance","getAttendance","addExpenses","userInfoFromStorage","localStorage","getItem","JSON","parse","messMenuFromStorage","initialState","userInfo","middleware","store"],"sources":["F:/mess-manager/mess_manager/frontend/src/store.js"],"sourcesContent":["// store redux\r\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from \"./reducers/user_reducers\";\r\n\r\nimport { messMenuReducer } from \"./reducers/mess_reducers\";\r\nimport { postAttendanceReducers, getAttendanceReducers } from \"./reducers/attendance_reducers\";\r\nimport { addExpensesReducer } from \"./reducers/expenses_reducers\";\r\nconst reducer = combineReducers({\r\n  // user reducers\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n\r\n\r\n\r\n  // userPasswordReset:userPasswordResetReducer,\r\n  // userPasswordResetConfirm:userPasswordResetConfirmReducer,\r\n\r\n  // mess reducers\r\n  messMenu: messMenuReducer,\r\n\r\n  // attendance reducers\r\n  attendance: postAttendanceReducers,\r\n  getAttendance: getAttendanceReducers,\r\n\r\n  addExpenses: addExpensesReducer,\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem(\"userInfo\")\r\n  ? JSON.parse(localStorage.getItem(\"userInfo\"))\r\n  : null;\r\n\r\nconst messMenuFromStorage = localStorage.getItem(\"messMenu\") ? JSON.parse(localStorage.getItem(\"messMenu\")) : null;\r\n\r\nconst initialState = {\r\n\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n\r\n  messMenu: { messMenu: messMenuFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,wBAJF,EAKEC,eALF,EAMEC,iBANF,EAOEC,iBAPF,QAQO,0BARP;AAUA,SAASC,eAAT,QAAgC,0BAAhC;AACA,SAASC,sBAAT,EAAiCC,qBAAjC,QAA8D,gCAA9D;AACA,SAASC,kBAAT,QAAmC,8BAAnC;AACA,MAAMC,OAAO,GAAGf,eAAe,CAAC;EAC9B;EACAgB,SAAS,EAAEZ,gBAFmB;EAG9Ba,YAAY,EAAEZ,mBAHgB;EAK9Ba,WAAW,EAAEZ,kBALiB;EAM9Ba,iBAAiB,EAAEZ,wBANW;EAO9Ba,QAAQ,EAAEZ,eAPoB;EAQ9Ba,UAAU,EAAEZ,iBARkB;EAS9Ba,UAAU,EAAEZ,iBATkB;EAa9B;EACA;EAEA;EACAa,QAAQ,EAAEZ,eAjBoB;EAmB9B;EACAa,UAAU,EAAEZ,sBApBkB;EAqB9Ba,aAAa,EAAEZ,qBArBe;EAuB9Ba,WAAW,EAAEZ;AAvBiB,CAAD,CAA/B;AA0BA,MAAMa,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GAExB,IAFJ;AAIA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAAkF,IAA9G;AAEA,MAAMI,YAAY,GAAG;EAEnBjB,SAAS,EAAE;IAAEkB,QAAQ,EAAEP;EAAZ,CAFQ;EAInBJ,QAAQ,EAAE;IAAEA,QAAQ,EAAES;EAAZ;AAJS,CAArB;AAOA,MAAMG,UAAU,GAAG,CAACjC,KAAD,CAAnB;AAEA,MAAMkC,KAAK,GAAGrC,WAAW,CACvBgB,OADuB,EAEvBkB,YAFuB,EAGvB9B,mBAAmB,CAACF,eAAe,CAAC,GAAGkC,UAAJ,CAAhB,CAHI,CAAzB;AAMA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}